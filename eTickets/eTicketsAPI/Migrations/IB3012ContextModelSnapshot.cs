// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eTicketsAPI.Database;

namespace eTicketsAPI.Migrations
{
    [DbContext(typeof(IB3012Context))]
    partial class IB3012ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eTicketsAPI.Database.BankAccounts", b =>
                {
                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("AccountId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("eTicketsAPI.Database.BankCards", b =>
                {
                    b.Property<string>("CardId")
                        .HasColumnType("nvarchar(17)")
                        .HasMaxLength(17);

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("CardOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CardValid")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int>("ControlNumber")
                        .HasColumnType("int");

                    b.HasKey("CardId");

                    b.HasIndex("AccountId");

                    b.ToTable("BankCards");
                });

            modelBuilder.Entity("eTicketsAPI.Database.BankTransactions", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("CardId")
                        .IsRequired()
                        .HasColumnType("nvarchar(17)")
                        .HasMaxLength(17);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Iznos")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("TransactionId");

                    b.HasIndex("AccountId");

                    b.HasIndex("CardId");

                    b.ToTable("BankTransactions");
                });

            modelBuilder.Entity("eTicketsAPI.Database.Drzava", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DrzavaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("DrzavaId");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("eTicketsAPI.Database.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GradID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId")
                        .HasColumnName("DrzavaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("GradId");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("eTicketsAPI.Database.Kategorija", b =>
                {
                    b.Property<int>("KategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KategorijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("KategorijaId");

                    b.ToTable("Kategorija");
                });

            modelBuilder.Entity("eTicketsAPI.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("GradId")
                        .HasColumnName("GradID")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("SpolId")
                        .HasColumnName("SpolID")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("UlogaId")
                        .HasColumnName("UlogaID")
                        .HasColumnType("int");

                    b.HasKey("KorisnikId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("CK_Email")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("GradId");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique()
                        .HasName("CK_KorisnickoIme");

                    b.HasIndex("SpolId");

                    b.HasIndex("UlogaId");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("eTicketsAPI.Database.Kupovine", b =>
                {
                    b.Property<int>("KupovinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KupovinaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("KupacId")
                        .HasColumnName("KupacID")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnName("TicketID")
                        .HasColumnType("int");

                    b.Property<int>("TransakcijaId")
                        .HasColumnType("int");

                    b.HasKey("KupovinaId");

                    b.HasIndex("KupacId");

                    b.HasIndex("TicketId");

                    b.ToTable("Kupovine");
                });

            modelBuilder.Entity("eTicketsAPI.Database.PodKategorija", b =>
                {
                    b.Property<int>("PodKategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PodKategorijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KategorijaId")
                        .HasColumnName("KategorijaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("PodKategorijaId");

                    b.HasIndex("KategorijaId");

                    b.ToTable("PodKategorija");
                });

            modelBuilder.Entity("eTicketsAPI.Database.Slika", b =>
                {
                    b.Property<int>("SlikaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SlikaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Slika1")
                        .IsRequired()
                        .HasColumnName("Slika")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("SlikaId");

                    b.ToTable("Slika");
                });

            modelBuilder.Entity("eTicketsAPI.Database.Spol", b =>
                {
                    b.Property<int>("SpolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SpolID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("SpolId");

                    b.ToTable("Spol");
                });

            modelBuilder.Entity("eTicketsAPI.Database.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TicketID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminId")
                        .HasColumnName("AdminID")
                        .HasColumnType("int");

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("GradId")
                        .HasColumnName("GradID")
                        .HasColumnType("int");

                    b.Property<string>("NazivDogadjaja")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("PodKategorijaId")
                        .HasColumnName("PodKategorijaID")
                        .HasColumnType("int");

                    b.Property<bool>("Prodano")
                        .HasColumnType("bit");

                    b.Property<int>("ProdavacId")
                        .HasColumnName("ProdavacID")
                        .HasColumnType("int");

                    b.Property<int?>("Red")
                        .HasColumnType("int");

                    b.Property<string>("Sektor")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Sjedalo")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("SlikaId")
                        .HasColumnName("SlikaID")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("AdminId");

                    b.HasIndex("GradId");

                    b.HasIndex("PodKategorijaId");

                    b.HasIndex("ProdavacId");

                    b.HasIndex("SlikaId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("eTicketsAPI.Database.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UlogaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UlogaId");

                    b.ToTable("Uloga");
                });

            modelBuilder.Entity("eTicketsAPI.Database.BankCards", b =>
                {
                    b.HasOne("eTicketsAPI.Database.BankAccounts", "Account")
                        .WithMany("BankCards")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_BankCards_Account")
                        .IsRequired();
                });

            modelBuilder.Entity("eTicketsAPI.Database.BankTransactions", b =>
                {
                    b.HasOne("eTicketsAPI.Database.BankAccounts", "Account")
                        .WithMany("BankTransactions")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_BankTransactions_Account")
                        .IsRequired();

                    b.HasOne("eTicketsAPI.Database.BankCards", "Card")
                        .WithMany("BankTransactions")
                        .HasForeignKey("CardId")
                        .HasConstraintName("FK_BankTransactions_Card")
                        .IsRequired();
                });

            modelBuilder.Entity("eTicketsAPI.Database.Grad", b =>
                {
                    b.HasOne("eTicketsAPI.Database.Drzava", "Drzava")
                        .WithMany("Grad")
                        .HasForeignKey("DrzavaId")
                        .HasConstraintName("FK_Grad_Drzava")
                        .IsRequired();
                });

            modelBuilder.Entity("eTicketsAPI.Database.Korisnik", b =>
                {
                    b.HasOne("eTicketsAPI.Database.Grad", "Grad")
                        .WithMany("Korisnik")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_Korisnik_Grad")
                        .IsRequired();

                    b.HasOne("eTicketsAPI.Database.Spol", "Spol")
                        .WithMany("Korisnik")
                        .HasForeignKey("SpolId")
                        .HasConstraintName("FK_Korisnik_Spol")
                        .IsRequired();

                    b.HasOne("eTicketsAPI.Database.Uloga", "Uloga")
                        .WithMany("Korisnik")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK_Korisnik_Uloga")
                        .IsRequired();
                });

            modelBuilder.Entity("eTicketsAPI.Database.Kupovine", b =>
                {
                    b.HasOne("eTicketsAPI.Database.Korisnik", "Kupac")
                        .WithMany("Kupovine")
                        .HasForeignKey("KupacId")
                        .HasConstraintName("FK_Transakcija_Kupac")
                        .IsRequired();

                    b.HasOne("eTicketsAPI.Database.Ticket", "Ticket")
                        .WithMany("Kupovine")
                        .HasForeignKey("TicketId")
                        .HasConstraintName("FK_Transakcija_Ulaznica")
                        .IsRequired();
                });

            modelBuilder.Entity("eTicketsAPI.Database.PodKategorija", b =>
                {
                    b.HasOne("eTicketsAPI.Database.Kategorija", "Kategorija")
                        .WithMany("PodKategorija")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK_PodKategorija_Kategorija")
                        .IsRequired();
                });

            modelBuilder.Entity("eTicketsAPI.Database.Ticket", b =>
                {
                    b.HasOne("eTicketsAPI.Database.Korisnik", "Admin")
                        .WithMany("TicketAdmin")
                        .HasForeignKey("AdminId")
                        .HasConstraintName("FK_Ulaznica_Admin");

                    b.HasOne("eTicketsAPI.Database.Grad", "Grad")
                        .WithMany("Ticket")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_Ulaznica_Grad")
                        .IsRequired();

                    b.HasOne("eTicketsAPI.Database.PodKategorija", "PodKategorija")
                        .WithMany("Ticket")
                        .HasForeignKey("PodKategorijaId")
                        .HasConstraintName("FK_Ulaznica_PodKategorija")
                        .IsRequired();

                    b.HasOne("eTicketsAPI.Database.Korisnik", "Prodavac")
                        .WithMany("TicketProdavac")
                        .HasForeignKey("ProdavacId")
                        .HasConstraintName("FK_Ulaznica_Prodavac")
                        .IsRequired();

                    b.HasOne("eTicketsAPI.Database.Slika", "Slika")
                        .WithMany("Ticket")
                        .HasForeignKey("SlikaId")
                        .HasConstraintName("FK_Ulaznica_Slika")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
